version: '3.8'

services:
    migrator:
        build:
            context: ./segui-tus-compras-backend
        working_dir: /var/www
        volumes:
            - ./segui-tus-compras-backend:/var/www
        depends_on:
            - db
        environment:
            - DB_HOST=db
            - DB_DATABASE=laravel
            - DB_USERNAME=root
            - DB_PASSWORD=root
        command: sh -c "until php artisan migrate --force; do echo 'Waiting for DB...'; sleep 3; done"
        networks:
            - app_network

    app:
        image: ghcr.io/trejojulian/segui-tus-compras-backend:1.6
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www
        depends_on:
            - db
            - migrator
        environment:
            - DB_HOST=db
            - DB_DATABASE=laravel
            - DB_USERNAME=root
            - DB_PASSWORD=root
        expose:
            - "9000"
        networks:
            - app_network
        command: ["php-fpm"]

    nginx:
        image: nginx:stable-alpine
        container_name: nginx_app
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - ./segui-tus-compras-backend:/var/www
            - ./segui-tus-compras-backend/nginx.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - app_network

    frontend:
        image: ghcr.io/trejojulian/segui-tus-compras-frontend:1.5
        container_name: vue_app
        restart: unless-stopped
        ports:
            - "5173:5173"
        networks:
            - app_network
        depends_on:
            - nginx
        environment:
            - VITE_HOST=0.0.0.0
            - CHOKIDAR_USEPOLLING=true
        working_dir: /app
        command: npm run dev

    db:
        image: mysql:8
        container_name: mysql_db
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: laravel
        ports:
            - "3306:3306"
        networks:
            - app_network
        volumes:
            - mysql_data:/var/lib/mysql

    redis:
        image: redis:alpine
        container_name: redis_prometheus
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - app_network

volumes:
    mysql_data:

networks:
    app_network:
        driver: bridge
